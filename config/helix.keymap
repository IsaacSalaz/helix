/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3


/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
       keymap {
              compatible = "zmk,keymap";
 
              default_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  -   |
 // |  ESC   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
 // |  TAB  |   A    |   S    |   D    |   F     |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
 // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |  LBKT  |                    |  RBKT  |   N    |   M    |   ,    |   .    |   /    |  SHIFT   |
 // | ADJUST |  DEL   |  LGUI   |  ALT  | LCTRL  | LOWER  | ENTER  |                    |  SPACE | RAISE  |  RCTRL  |  LEFT  |  DOWN  |  UP    |  RIGHT |
                     bindings = <
       &kp GRAVE  &kp N1  &kp N2   &kp N3   &kp N4    &kp N5                               &kp N6    &kp N7    &kp N8    &kp N9     &kp N0    &kp MINUS
       &kp ESC    &kp Q   &kp W    &kp E    &kp R     &kp T                                &kp Y     &kp U     &kp I     &kp O      &kp P     &kp BSPC
       &kp TAB  &kp A   &kp S    &kp D    &kp F     &kp G                                &kp H     &kp J     &kp K     &kp L      &kp SEMI  &kp SQT
       &kp LSHFT  &kp Z   &kp X    &kp C    &kp V     &kp B     &kp LBKT         &kp RBKT  &kp N     &kp M     &kp COMMA &kp PERIOD &kp SLASH &kp RSHIFT
       &mo ADJUST &kp DEL &kp LGUI &kp LALT &kp LCTRL &mo LOWER &kp RET        &kp SPACE &mo RAISE &kp RCTRL &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT
                     >;
              };
              lower_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |      |  F1  |  F2  |  F3  |  F4  |  F5  |                                  |  F6  |  F7  |  F8  |  F9  |  F10 |  F11 |
 // |      |   1  |   2  |   3  |   4  |   5  |                                  |   6  |   7  |   8  |   9  |   0  |  F12 |
 // |      |  !   |  @   |  #   |  $   |  %   |                                  |   ^  |   &  |   *  |   (  |   )  |   |  |
 // |      |   =  |   -  |   +  |   {  |  }   | LBKT |                    | RBKT |   [  |   ]  |   ;  |   :  |   \  |RSHIFT|
 // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |
                     bindings = <
       &trans    &kp F1   &kp F2 &kp F3   &kp F4   &kp F5                             &kp F6    &kp F7    &kp F8    &kp F9   &kp F10  &kp F11
       &trans    &kp N1   &kp N2 &kp N3   &kp N4   &kp N5                             &kp N6    &kp N7    &kp N8    &kp N9   &kp N0   &kp F12
       &trans    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                          &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp PIPE
       &trans    &kp EQUAL &kp MINUS &kp PLUS &kp LBRC &kp RBRC &trans       &trans   &kp LBKT  &kp RBKT  &kp SEMI  &kp COLON &kp BSLH &kp RSHIFT
       &trans    &trans   &trans &trans   &trans   &trans    &trans          &trans   &trans    &trans    &trans    &trans   &trans   &trans
                     >;
              };
              raise_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |       |       |       |       |       |       |                                    |       |       |       |       |       |       |
 // |       |   INS |  PSCR | MENU  |       |       |                                    | PG_UP | PVWD  |   UP  | NWRD  | DLine |  BSPC |
 // |       |       |       |       |       |       |                                    | PG_DWN| LEFT  |  DOWN | RIGHT |  DEL  |   BSPC|
 // |       |       |       |       |       |  CAPS |       |                    |       |  F12  | HOME  | PSCRN | END   | PG_UP |       |
 // |       |       |       |       |       |       |       |                    |       |       |       |       |       |       |       |
                     bindings = <
       &trans    &trans &trans &trans &trans  &trans                       &trans  &trans    &trans     &trans       &trans       &trans
       &trans    &kp INS &kp PSCRN &kp K_APP &trans  &trans             &kp PG_UP  &kp LC(LEFT) &kp UP  &kp LC(RIGHT) &kp LC(RS(BSPC)) &kp BSPC
       &trans    &trans &trans &trans &trans  &trans                       &kp PG_DN  &kp LEFT  &kp DOWN   &kp RIGHT    &kp DEL    &kp BSPC
       &trans    &trans &trans &trans &trans  &kp CAPS &trans        &trans &kp F12 &kp HOME  &kp PSCRN  &kp END &kp PG_UP &trans
       &trans    &trans &trans &trans &trans  &trans  &trans        &trans   &trans    &trans    &trans    &trans   &trans   &trans
                
                     >;
              };
              adjust_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |    `     |    !     |    @     |    #     |    $     |    %     |                                          |    ^     |    &     |    *     |    (     |    )     |  EP TOG  |
 // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
 // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                          | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
 // |  BT PRV  |          |          |          |          |          |    {     |                    |    }     |          |          |          |          |          |          |
 // |          |          |          |          |          |          |          |                    |          |          |   MUTE   | NEXT     | VOL-     | VOL+     | PLAY     |
                     bindings = <
       &kp GRAVE  &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT                             &kp CARET       &kp AMPS        &kp ASTRK       &kp LPAR        &kp RPAR        &ext_power EP_TOG
       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                          &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI &rgb_ug RGB_BRI &rgb_ug RGB_TOG 
       &bt BT_NXT &out OUT_TOG &out OUT_USB &out OUT_BLE &trans       &trans                                &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD &rgb_ug RGB_BRD &trans
       &bt BT_PRV &trans       &trans       &trans       &trans       &trans       &kp LBRC        &kp RBRC &trans          &trans          &trans          &trans          &trans          &trans
       &trans     &trans       &trans       &trans       &trans       &trans       &trans          &trans &trans  &kp C_MUTE    &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP
                     >;
              };
       };
};
